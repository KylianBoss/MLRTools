name: Build and Release MLR Tools

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".gitignore"

permissions:
  contents: write
  packages: write

jobs:
  release:
    if: contains(github.event.head_commit.message, 'RELEASE')
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Get Package Version
        id: package_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g @quasar/cli

      - name: Build Quasar Electron App
        run: |
          quasar build -m electron
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          release_name: Release v${{ steps.package_version.outputs.version }}
          body: |
            Release v${{ steps.package_version.outputs.version }}

            Changes in this Release:
            - Automated release from master branch
          draft: false
          prerelease: false

      - name: Create ZIP Archive
        run: |
          Compress-Archive -Path "dist/electron/MLR Tools-win32-x64/*" -DestinationPath "dist/electron/MLRTools-v${{ steps.package_version.outputs.version }}.zip"
        shell: pwsh

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/electron/MLRTools-v${{ steps.package_version.outputs.version }}.zip
          asset_name: MLRTools-v${{ steps.package_version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Generate and Upload latest.yml
        run: |
          $version = "${{ steps.package_version.outputs.version }}"
          $zipPath = "MLRTools-v${version}.zip"
          $hash = (Get-FileHash "dist/electron/${zipPath}" -Algorithm SHA512).Hash.ToLower()
          $size = (Get-Item "dist/electron/${zipPath}").Length

          $yaml = @"
          version: ${version}
          files:
            - url: ${zipPath}
              sha512: ${hash}
              size: ${size}
          path: ${zipPath}
          sha512: ${hash}
          releaseDate: $(Get-Date -Format "yyyy-MM-dd'T'HH:mm:ss.fffZ")
          "@

          $yaml | Out-File -FilePath "dist/electron/latest.yml" -Encoding UTF8
        shell: pwsh

      - name: Upload latest.yml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/electron/latest.yml
          asset_name: latest.yml
          asset_content_type: application/yaml
